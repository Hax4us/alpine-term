diff -uNr openssl-1.1.1b/crypto/cversion.c openssl-1.1.1b.mod/crypto/cversion.c
--- openssl-1.1.1b/crypto/cversion.c	2019-02-26 16:15:30.000000000 +0200
+++ openssl-1.1.1b.mod/crypto/cversion.c	2019-04-27 17:08:45.041281158 +0300
@@ -28,17 +28,9 @@
     case OPENSSL_PLATFORM:
         return PLATFORM;
     case OPENSSL_DIR:
-#ifdef OPENSSLDIR
-        return "OPENSSLDIR: \"" OPENSSLDIR "\"";
-#else
-        return "OPENSSLDIR: N/A";
-#endif
+        return "OPENSSLDIR: \"@TERMUX_PREFIX@/etc/tls\"";
     case OPENSSL_ENGINES_DIR:
-#ifdef ENGINESDIR
-        return "ENGINESDIR: \"" ENGINESDIR "\"";
-#else
-        return "ENGINESDIR: N/A";
-#endif
+        return "ENGINESDIR: \"N/A\"";
     }
     return "not available";
 }
diff -uNr openssl-1.1.1b/crypto/engine/eng_list.c openssl-1.1.1b.mod/crypto/engine/eng_list.c
--- openssl-1.1.1b/crypto/engine/eng_list.c	2019-02-26 16:15:30.000000000 +0200
+++ openssl-1.1.1b.mod/crypto/engine/eng_list.c	2019-04-27 17:06:45.498500291 +0300
@@ -274,6 +274,28 @@
     dest->flags = src->flags;
 }
 
+#ifdef ENGINESDIR
+# undef ENGINESDIR
+#endif
+
+#ifndef ANDROID_PREPEND_PREFIX
+#define ANDROID_PREPEND_PREFIX 1
+int  asprintf(char** __s_ptr, const char* __fmt, ...);
+char* getenv(const char* __name);
+static __inline__ char *__prepend_prefix(char *path) {
+        char *_new_path;
+        char *_env_prefix = getenv("PREFIX");
+
+        if (_env_prefix) {
+                asprintf(&_new_path, "%s%s", _env_prefix, path);
+                return _new_path;
+        } else {
+                asprintf(&_new_path, "%s%s", "@TERMUX_PREFIX@", path);
+                return _new_path;
+        }
+}
+#endif
+
 ENGINE *ENGINE_by_id(const char *id)
 {
     ENGINE *iterator;
@@ -313,12 +335,15 @@
     CRYPTO_THREAD_unlock(global_engine_lock);
     if (iterator != NULL)
         return iterator;
+
+    char *prefix_engines_dir = __prepend_prefix("/lib/engines");
+
     /*
      * Prevent infinite recursion if we're looking for the dynamic engine.
      */
     if (strcmp(id, "dynamic")) {
         if ((load_dir = ossl_safe_getenv("OPENSSL_ENGINES")) == NULL)
-            load_dir = ENGINESDIR;
+            load_dir = prefix_engines_dir;
         iterator = ENGINE_by_id("dynamic");
         if (!iterator || !ENGINE_ctrl_cmd_string(iterator, "ID", id, 0) ||
             !ENGINE_ctrl_cmd_string(iterator, "DIR_LOAD", "2", 0) ||
@@ -327,9 +352,11 @@
             !ENGINE_ctrl_cmd_string(iterator, "LIST_ADD", "1", 0) ||
             !ENGINE_ctrl_cmd_string(iterator, "LOAD", NULL, 0))
             goto notfound;
+        free(prefix_engines_dir);
         return iterator;
     }
  notfound:
+    free(prefix_engines_dir);
     ENGINE_free(iterator);
     ENGINEerr(ENGINE_F_ENGINE_BY_ID, ENGINE_R_NO_SUCH_ENGINE);
     ERR_add_error_data(2, "id=", id);
diff -uNr openssl-1.1.1b/e_os.h openssl-1.1.1b.mod/e_os.h
--- openssl-1.1.1b/e_os.h	2019-02-26 16:15:30.000000000 +0200
+++ openssl-1.1.1b.mod/e_os.h	2019-04-27 17:03:00.262580947 +0300
@@ -39,7 +39,7 @@
  * sockets will be tried in the order listed in case accessing the device
  * files listed in DEVRANDOM did not return enough randomness.
  */
-#  define DEVRANDOM_EGD "/var/run/egd-pool","/dev/egd-pool","/etc/egd-pool","/etc/entropy"
+#  define DEVRANDOM_EGD "/dev/egd-pool","@TERMUX_PREFIX@/var/run/egd-pool"
 # endif
 
 # if defined(OPENSSL_SYS_VXWORKS) || defined(OPENSSL_SYS_UEFI)
diff -uNr openssl-1.1.1b/include/internal/cryptlib.h openssl-1.1.1b.mod/include/internal/cryptlib.h
--- openssl-1.1.1b/include/internal/cryptlib.h	2019-02-26 16:15:30.000000000 +0200
+++ openssl-1.1.1b.mod/include/internal/cryptlib.h	2019-04-27 17:03:10.942624590 +0300
@@ -53,12 +53,36 @@
 
 # define OPENSSL_CONF             "openssl.cnf"
 
+#ifdef OPENSSLDIR
+# undef OPENSSLDIR
+#endif
+
+#ifndef ANDROID_PREPEND_PREFIX
+#define ANDROID_PREPEND_PREFIX 1
+int  asprintf(char** __s_ptr, const char* __fmt, ...);
+char* getenv(const char* __name);
+static __inline__ char *__prepend_prefix(char *path) {
+        char *_new_path;
+        char *_env_prefix = getenv("PREFIX");
+
+        if (_env_prefix) {
+                asprintf(&_new_path, "%s%s", _env_prefix, path);
+                return _new_path;
+        } else {
+                asprintf(&_new_path, "%s%s", "@TERMUX_PREFIX@", path);
+                return _new_path;
+        }
+}
+#endif
+
+#define OPENSSLDIR __prepend_prefix("/etc/tls")
+
 # ifndef OPENSSL_SYS_VMS
-#  define X509_CERT_AREA          OPENSSLDIR
-#  define X509_CERT_DIR           OPENSSLDIR "/certs"
-#  define X509_CERT_FILE          OPENSSLDIR "/cert.pem"
-#  define X509_PRIVATE_DIR        OPENSSLDIR "/private"
-#  define CTLOG_FILE              OPENSSLDIR "/ct_log_list.cnf"
+#  define X509_CERT_AREA          __prepend_prefix("/etc/tls")
+#  define X509_CERT_DIR           __prepend_prefix("/etc/tls/certs")
+#  define X509_CERT_FILE          __prepend_prefix("/etc/tls/cert.pem")
+#  define X509_PRIVATE_DIR        __prepend_prefix("/etc/tls/private")
+#  define CTLOG_FILE              __prepend_prefix("/etc/tls/ct_log_list.cnf")
 # else
 #  define X509_CERT_AREA          "OSSL$DATAROOT:[000000]"
 #  define X509_CERT_DIR           "OSSL$DATAROOT:[CERTS]"
