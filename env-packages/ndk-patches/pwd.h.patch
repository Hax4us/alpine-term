diff --git a/sysroot/usr/include/pwd.h b/usr/include/pwd.h
index c3bb9ce..d39032a 100644
--- a/sysroot/usr/include/pwd.h
+++ b/usr/include/pwd.h
@@ -89,13 +89,75 @@ struct passwd* getpwuid(uid_t __uid);
 struct passwd* getpwent(void) __INTRODUCED_IN(26);
 
 void setpwent(void) __INTRODUCED_IN(26);
-void endpwent(void) __INTRODUCED_IN(26);
 #endif /* __ANDROID_API__ >= 26 */
 
 
 int getpwnam_r(const char* __name, struct passwd* __pwd, char* __buf, size_t __n, struct passwd** __result) __INTRODUCED_IN(12);
 int getpwuid_r(uid_t __uid, struct passwd* __pwd, char* __buf, size_t __n, struct passwd** __result) __INTRODUCED_IN(12);
 
+int access(const char* __path, int __mode);
+
+#ifndef ANDROID_PREPEND_PREFIX
+#define ANDROID_PREPEND_PREFIX 1
+int  asprintf(char** __s_ptr, const char* __fmt, ...) __printflike(2, 3);
+char* getenv(const char* __name);
+static __inline__ char *__prepend_prefix(char *path) {
+        char *_new_path;
+        char *_env_prefix = getenv("PREFIX");
+
+        if (_env_prefix) {
+                asprintf(&_new_path, "%s%s", _env_prefix, path);
+                return _new_path;
+        } else {
+                asprintf(&_new_path, "%s%s", "@TERMUX_PREFIX@", path);
+                return _new_path;
+        }
+}
+#endif
+
+static void android_setup_pwd(struct passwd* pw) {
+	pw->pw_shell = __prepend_prefix("/bin/bash");
+
+	pw->pw_dir = getenv("HOME");
+	if (!pw->pw_dir) pw->pw_dir = "@TERMUX_HOME@";
+
+
+	pw->pw_passwd = "*";
+#ifdef __LP64__
+	pw->pw_gecos = ""; /* Avoid NULL field. */
+#endif
+}
+
+static struct passwd* android_polyfill_getpwuid(uid_t t) {
+       struct passwd* pw = getpwuid(t);
+       if (pw == NULL) return NULL;
+       android_setup_pwd(pw);
+       return pw;
+}
+
+static struct passwd* android_polyfill_getpwnam(const char* name) {
+       struct passwd* pw = getpwnam(name);
+       if (pw == NULL) return NULL;
+       android_setup_pwd(pw);
+       return pw;
+}
+
+static int android_polyfill_getpwuid_r(uid_t uid,
+                                       struct passwd *pwd,
+                                       char *buffer,
+                                       size_t bufsize,
+                                       struct passwd **result) {
+       int ret = getpwuid_r(uid, pwd, buffer, bufsize, result);
+       if (ret != 0) return ret;
+       android_setup_pwd(pwd);
+       return 0;
+}
+
+#define getpwnam android_polyfill_getpwnam
+#define getpwuid android_polyfill_getpwuid
+#define getpwuid_r android_polyfill_getpwuid_r
+static void endpwent(void) { /* Do nothing. */ }
+
 __END_DECLS
 
 #endif
